{"version":3,"sources":["webpack:///../../../src/components/VExpansionPanel/VExpansionPanels.ts","webpack:///./src/components/NewPost.vue?c030","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelContent.ts","webpack:///../../../src/components/VTextarea/VTextarea.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelHeader.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanel.ts","webpack:///./src/views/Blog.vue?4c16","webpack:///./src/components/NewPost.vue?991a","webpack:///src/components/NewPost.vue","webpack:///./src/components/NewPost.vue?5761","webpack:///./src/components/NewPost.vue?4b75","webpack:///src/views/Blog.vue","webpack:///./src/views/Blog.vue?fc37","webpack:///./src/views/Blog.vue"],"names":["name","provide","expansionPanels","this","props","accordion","disabled","flat","hover","focusable","inset","popout","readonly","tile","Boolean","computed","classes","created","$attrs","hasOwnProperty","Array","value","length","methods","updateItem","getValue","item","nextValue","index","toggleMethod","baseMixins","isActive","expansionPanel","beforeDestroy","render","h","showLazyContent","staticClass","directives","class","autoGrow","noResize","rowHeight","type","Number","default","validator","v","isNaN","parseFloat","rows","parseInt","noResizeHandle","watch","lazyValue","$nextTick","mounted","setTimeout","calculateInputHeight","input","$refs","height","minHeight","Math","genInput","onInput","onKeyDown","isFocused","e","ripple","disableIconRotate","expandIcon","hideActions","data","hasMousedown","isDisabled","isReadonly","onClick","genIcon","icon","$createElement","setBackgroundColor","attrs","tabindex","on","click","mousedown","mouseup","open","content","header","nextIsActive","groupClasses","registerContent","unregisterContent","registerHeader","vm","unregisterHeader","toggle","isBooted","String","_vm","_h","_c","_self","_v","_l","post","idx","key","_s","title","timeOfPost","toDate","toDateString","_e","staticRenderFns","overlay","$event","model","callback","$$v","$set","expression","postPost","postText","commitPost","component","VBtn","VCol","VContainer","VIcon","VOverlay","VRow","VTextField","VTextarea","components","NewPost","like","console","log","newLike","id","getPosts","then","VExpansionPanel","VExpansionPanelContent","VExpansionPanelHeader","VExpansionPanels"],"mappings":"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","file":"js/chunk-69d935b0.bed9d3cd.js","sourcesContent":["// Styles\nimport './VExpansionPanel.sass'\n\n// Components\nimport { BaseItemGroup, GroupableInstance } from '../VItemGroup/VItemGroup'\nimport VExpansionPanel from './VExpansionPanel'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\ninterface VExpansionPanelInstance extends InstanceType<typeof VExpansionPanel> {}\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n\n  provide (): object {\n    return {\n      expansionPanels: this,\n    }\n  },\n\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--flat': this.flat,\n        'v-expansion-panels--hover': this.hover,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n        'v-expansion-panels--tile': this.tile,\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this)\n    }\n\n    /* istanbul ignore next */\n    if (\n      Array.isArray(this.value) &&\n      this.value.length > 0 &&\n      typeof this.value[0] === 'boolean'\n    ) {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this)\n    }\n  },\n\n  methods: {\n    updateItem (item: GroupableInstance & VExpansionPanelInstance, index: number) {\n      const value = this.getValue(item, index)\n      const nextValue = this.getValue(item, index + 1)\n\n      item.isActive = this.toggleMethod(value)\n      item.nextIsActive = this.toggleMethod(nextValue)\n    },\n  },\n})\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewPost.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewPost.vue?vue&type=style&index=0&lang=css&\"","// Components\nimport VExpansionPanel from './VExpansionPanel'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-content',\n\n  computed: {\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerContent(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterContent()\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, this.showLazyContent(() => [\n      h('div', this.setBackgroundColor(this.color, {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }), [\n        h('div', { class: 'v-expansion-panel-content__wrap' }, getSlot(this)),\n      ]),\n    ]))\n  },\n})\n","// Styles\nimport './VTextarea.sass'\n\n// Extensions\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport Vue from 'vue'\n\ninterface options extends Vue {\n  $refs: {\n    input: HTMLTextAreaElement\n  }\n}\n\nconst baseMixins = mixins<options &\n  InstanceType<typeof VTextField>\n>(\n  VTextField\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-textarea',\n\n  props: {\n    autoGrow: Boolean,\n    noResize: Boolean,\n    rowHeight: {\n      type: [Number, String],\n      default: 24,\n      validator: (v: any) => !isNaN(parseFloat(v)),\n    },\n    rows: {\n      type: [Number, String],\n      default: 5,\n      validator: (v: any) => !isNaN(parseInt(v, 10)),\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-textarea': true,\n        'v-textarea--auto-grow': this.autoGrow,\n        'v-textarea--no-resize': this.noResizeHandle,\n        ...VTextField.options.computed.classes.call(this),\n      }\n    },\n    noResizeHandle (): boolean {\n      return this.noResize || this.autoGrow\n    },\n  },\n\n  watch: {\n    lazyValue () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n    rowHeight () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n  },\n\n  mounted () {\n    setTimeout(() => {\n      this.autoGrow && this.calculateInputHeight()\n    }, 0)\n  },\n\n  methods: {\n    calculateInputHeight () {\n      const input = this.$refs.input\n      if (!input) return\n\n      input.style.height = '0'\n      const height = input.scrollHeight\n      const minHeight = parseInt(this.rows, 10) * parseFloat(this.rowHeight)\n      // This has to be done ASAP, waiting for Vue\n      // to update the DOM causes ugly layout jumping\n      input.style.height = Math.max(minHeight, height) + 'px'\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.tag = 'textarea'\n      delete input.data!.attrs!.type\n      input.data!.attrs!.rows = this.rows\n\n      return input\n    },\n    onInput (e: Event) {\n      VTextField.options.methods.onInput.call(this, e)\n      this.autoGrow && this.calculateInputHeight()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      // Prevents closing of a\n      // dialog when pressing\n      // enter\n      if (this.isFocused && e.keyCode === 13) {\n        e.stopPropagation()\n      }\n\n      this.$emit('keydown', e)\n    },\n  },\n})\n","// Components\nimport { VFadeTransition } from '../transitions'\nimport VExpansionPanel from './VExpansionPanel'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-header', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-header',\n\n  directives: { ripple },\n\n  props: {\n    disableIconRotate: Boolean,\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n    hideActions: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: false,\n    },\n  },\n\n  data: () => ({\n    hasMousedown: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel-header--active': this.isActive,\n        'v-expansion-panel-header--mousedown': this.hasMousedown,\n      }\n    },\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n    isDisabled (): boolean {\n      return this.expansionPanel.isDisabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanel.isReadonly\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerHeader(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterHeader()\n  },\n\n  methods: {\n    onClick (e: MouseEvent) {\n      this.$emit('click', e)\n    },\n    genIcon () {\n      const icon = getSlot(this, 'actions') ||\n        [this.$createElement(VIcon, this.expandIcon)]\n\n      return this.$createElement(VFadeTransition, [\n        this.$createElement('div', {\n          staticClass: 'v-expansion-panel-header__icon',\n          class: {\n            'v-expansion-panel-header__icon--disable-rotate': this.disableIconRotate,\n          },\n          directives: [{\n            name: 'show',\n            value: !this.isDisabled,\n          }],\n        }, icon),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('button', this.setBackgroundColor(this.color, {\n      staticClass: 'v-expansion-panel-header',\n      class: this.classes,\n      attrs: {\n        tabindex: this.isDisabled ? -1 : null,\n        type: 'button',\n      },\n      directives: [{\n        name: 'ripple',\n        value: this.ripple,\n      }],\n      on: {\n        ...this.$listeners,\n        click: this.onClick,\n        mousedown: () => (this.hasMousedown = true),\n        mouseup: () => (this.hasMousedown = false),\n      },\n    }), [\n      getSlot(this, 'default', { open: this.isActive }, true),\n      this.hideActions || this.genIcon(),\n    ])\n  },\n})\n","// Components\nimport VExpansionPanels from './VExpansionPanels'\nimport VExpansionPanelHeader from './VExpansionPanelHeader'\nimport VExpansionPanelContent from './VExpansionPanelContent'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VExpansionPanelHeaderInstance = InstanceType<typeof VExpansionPanelHeader>\ntype VExpansionPanelContentInstance = InstanceType<typeof VExpansionPanelContent>\n\nexport default mixins(\n  GroupableFactory<'expansionPanels', typeof VExpansionPanels>('expansionPanels', 'v-expansion-panel', 'v-expansion-panels'),\n  RegistrableProvide('expansionPanel', true)\n  /* @vue/component */\n).extend({\n  name: 'v-expansion-panel',\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n  },\n\n  data () {\n    return {\n      content: null as VExpansionPanelContentInstance | null,\n      header: null as VExpansionPanelHeaderInstance | null,\n      nextIsActive: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel--active': this.isActive,\n        'v-expansion-panel--next-active': this.nextIsActive,\n        'v-expansion-panel--disabled': this.isDisabled,\n        ...this.groupClasses,\n      }\n    },\n    isDisabled (): boolean {\n      return this.expansionPanels.disabled || this.disabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanels.readonly || this.readonly\n    },\n  },\n\n  methods: {\n    registerContent (vm: VExpansionPanelContentInstance) {\n      this.content = vm\n    },\n    unregisterContent () {\n      this.content = null\n    },\n    registerHeader (vm: VExpansionPanelHeaderInstance) {\n      this.header = vm\n      vm.$on('click', this.onClick)\n    },\n    unregisterHeader () {\n      this.header = null\n    },\n    onClick (e: MouseEvent) {\n      if (e.detail) this.header!.$el.blur()\n\n      this.$emit('click', e)\n\n      this.isReadonly || this.isDisabled || this.toggle()\n    },\n    toggle () {\n      /* istanbul ignore else */\n      if (this.content) this.content.isBooted = true\n      this.$nextTick(() => this.$emit('change'))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes,\n      attrs: {\n        'aria-expanded': String(this.isActive),\n      },\n    }, getSlot(this))\n  },\n})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{staticClass:\"text-center\"},[_c('h3',[_vm._v(\"Blog\")]),(_vm.allPosts)?_c('v-row',{attrs:{\"align\":\"center\",\"justify\":\"center\"}},[_c('v-col',{attrs:{\"sm\":\"6\"}},[_c('v-expansion-panels',{staticClass:\"text-left\"},_vm._l((_vm.allPosts),function(post,idx){return _c('v-expansion-panel',{key:idx},[_c('v-expansion-panel-header',{attrs:{\"expand-icon\":\"mdi-book-open-variant\",\"disable-icon-rotate\":\"\"}},[_vm._v(_vm._s(post.title))]),_c('v-expansion-panel-content',[_c('h5',[_vm._v(\" \"+_vm._s(post.timeOfPost.toDate().toDateString())+\" \")]),_c('br'),_vm._v(\" \"+_vm._s(post.post)+\" \")])],1)}),1)],1)],1):_vm._e(),(_vm.auth)?_c('NewPost'):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{attrs:{\"fluid\":\"\"}},[_c('v-overlay',{attrs:{\"value\":_vm.overlay}},[_c('v-btn',{attrs:{\"icon\":\"\"},on:{\"click\":function($event){_vm.overlay = false}}},[_vm._v(\" Post added! \"),_c('v-icon',[_vm._v(\"mdi-check\")])],1)],1),_c('v-row',{attrs:{\"justify\":\"center\"}},[_c('v-col',{attrs:{\"sm\":\"6\"}},[_c('h3',[_vm._v(\"New post to the blog:\")]),_c('v-text-field',{attrs:{\"type\":\"string\",\"label\":\"Title...\"},model:{value:(_vm.post.title),callback:function ($$v) {_vm.$set(_vm.post, \"title\", $$v)},expression:\"post.title\"}}),_c('v-textarea',{attrs:{\"autoGrow\":\"\",\"label\":\"Post...\"},model:{value:(_vm.post.postText),callback:function ($$v) {_vm.$set(_vm.post, \"postText\", $$v)},expression:\"post.postText\"}}),_c('v-btn',{staticClass:\"info\",on:{\"click\":_vm.postPost}},[_vm._v(\"Submit and publish\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-container fluid>\r\n    <v-overlay :value=\"overlay\">\r\n      <v-btn icon @click=\"overlay = false\">\r\n        Post added!\r\n        <v-icon>mdi-check</v-icon>\r\n      </v-btn>\r\n    </v-overlay>\r\n    <v-row justify=\"center\">\r\n      <v-col sm=\"6\">\r\n        <h3>New post to the blog:</h3>\r\n        <v-text-field v-model=\"post.title\" type=\"string\" label=\"Title...\" />\r\n        <v-textarea autoGrow v-model=\"post.postText\" label=\"Post...\" />\r\n        <v-btn class=\"info\" @click=\"postPost\">Submit and publish</v-btn>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from \"vuex\";\r\nexport default {\r\n  name: \"NewPost\",\r\n  data() {\r\n    return {\r\n      post: {\r\n        postText: \"\",\r\n        title: \"\"\r\n      },\r\n      overlay: false\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapActions([\"commitPost\", \"authentication\"]),\r\n    postPost() {\r\n      this.commitPost(this.post);\r\n      this.overlay = !this.overlay;\r\n      //this.timer = setTimeout((this.overlay = !this.overlay), 2);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n#newpost {\r\n  border-style: outset;\r\n  background-color: snow;\r\n  padding: 5px;\r\n}\r\n\r\n#subPub {\r\n  background-color: lightgrey;\r\n  border-style: outset;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewPost.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewPost.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NewPost.vue?vue&type=template&id=5a3c0ebe&\"\nimport script from \"./NewPost.vue?vue&type=script&lang=js&\"\nexport * from \"./NewPost.vue?vue&type=script&lang=js&\"\nimport style0 from \"./NewPost.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VOverlay } from 'vuetify/lib/components/VOverlay';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\nimport { VTextarea } from 'vuetify/lib/components/VTextarea';\ninstallComponents(component, {VBtn,VCol,VContainer,VIcon,VOverlay,VRow,VTextField,VTextarea})\n","<template>\r\n  <v-container class=\"text-center\">\r\n    <h3>Blog</h3>\r\n    <v-row v-if=\"allPosts\" align=\"center\" justify=\"center\">\r\n      <v-col sm=\"6\">\r\n        <v-expansion-panels class=\"text-left\">\r\n          <v-expansion-panel v-for=\"(post, idx) in allPosts\" :key=\"idx\">\r\n            <v-expansion-panel-header\r\n              expand-icon=\"mdi-book-open-variant\"\r\n              disable-icon-rotate\r\n            >{{ post.title }}</v-expansion-panel-header>\r\n            <v-expansion-panel-content>\r\n              <h5>\r\n                {{\r\n                post.timeOfPost.toDate().toDateString()\r\n                }}\r\n              </h5>\r\n              <br />\r\n              {{ post.post }}\r\n            </v-expansion-panel-content>\r\n          </v-expansion-panel>\r\n        </v-expansion-panels>\r\n      </v-col>\r\n    </v-row>\r\n    <NewPost v-if=\"auth\" />\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from \"vuex\";\r\nimport NewPost from \"../components/NewPost.vue\";\r\n\r\nexport default {\r\n  name: \"Blog\",\r\n  components: {\r\n    NewPost\r\n  },\r\n  methods: {\r\n    ...mapActions([\"getPosts\", \"newLike\"]),\r\n    like(post) {\r\n      console.log(post);\r\n      this.newLike(post.id);\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"allPosts\", \"auth\"])\r\n  },\r\n  created() {\r\n    this.getPosts().then(console.log(\"posts fetched\"));\r\n  }\r\n};\r\n</script>\r\n\r\n<style></style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Blog.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Blog.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Blog.vue?vue&type=template&id=1cfef687&\"\nimport script from \"./Blog.vue?vue&type=script&lang=js&\"\nexport * from \"./Blog.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VExpansionPanel } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelContent } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelHeader } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanels } from 'vuetify/lib/components/VExpansionPanel';\nimport { VRow } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VCol,VContainer,VExpansionPanel,VExpansionPanelContent,VExpansionPanelHeader,VExpansionPanels,VRow})\n"],"sourceRoot":""}